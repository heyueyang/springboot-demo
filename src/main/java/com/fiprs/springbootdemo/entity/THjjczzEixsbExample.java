package com.fiprs.springbootdemo.entity;

import java.util.ArrayList;
import java.util.List;

public class THjjczzEixsbExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_hjjczz_eixsb
     *
     * @mbggenerated Wed Nov 04 15:15:47 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_hjjczz_eixsb
     *
     * @mbggenerated Wed Nov 04 15:15:47 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_hjjczz_eixsb
     *
     * @mbggenerated Wed Nov 04 15:15:47 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hjjczz_eixsb
     *
     * @mbggenerated Wed Nov 04 15:15:47 CST 2020
     */
    public THjjczzEixsbExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hjjczz_eixsb
     *
     * @mbggenerated Wed Nov 04 15:15:47 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hjjczz_eixsb
     *
     * @mbggenerated Wed Nov 04 15:15:47 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hjjczz_eixsb
     *
     * @mbggenerated Wed Nov 04 15:15:47 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hjjczz_eixsb
     *
     * @mbggenerated Wed Nov 04 15:15:47 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hjjczz_eixsb
     *
     * @mbggenerated Wed Nov 04 15:15:47 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hjjczz_eixsb
     *
     * @mbggenerated Wed Nov 04 15:15:47 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hjjczz_eixsb
     *
     * @mbggenerated Wed Nov 04 15:15:47 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hjjczz_eixsb
     *
     * @mbggenerated Wed Nov 04 15:15:47 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hjjczz_eixsb
     *
     * @mbggenerated Wed Nov 04 15:15:47 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hjjczz_eixsb
     *
     * @mbggenerated Wed Nov 04 15:15:47 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_hjjczz_eixsb
     *
     * @mbggenerated Wed Nov 04 15:15:47 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andLbIsNull() {
            addCriterion("LB is null");
            return (Criteria) this;
        }

        public Criteria andLbIsNotNull() {
            addCriterion("LB is not null");
            return (Criteria) this;
        }

        public Criteria andLbEqualTo(String value) {
            addCriterion("LB =", value, "lb");
            return (Criteria) this;
        }

        public Criteria andLbNotEqualTo(String value) {
            addCriterion("LB <>", value, "lb");
            return (Criteria) this;
        }

        public Criteria andLbGreaterThan(String value) {
            addCriterion("LB >", value, "lb");
            return (Criteria) this;
        }

        public Criteria andLbGreaterThanOrEqualTo(String value) {
            addCriterion("LB >=", value, "lb");
            return (Criteria) this;
        }

        public Criteria andLbLessThan(String value) {
            addCriterion("LB <", value, "lb");
            return (Criteria) this;
        }

        public Criteria andLbLessThanOrEqualTo(String value) {
            addCriterion("LB <=", value, "lb");
            return (Criteria) this;
        }

        public Criteria andLbLike(String value) {
            addCriterion("LB like", value, "lb");
            return (Criteria) this;
        }

        public Criteria andLbNotLike(String value) {
            addCriterion("LB not like", value, "lb");
            return (Criteria) this;
        }

        public Criteria andLbIn(List<String> values) {
            addCriterion("LB in", values, "lb");
            return (Criteria) this;
        }

        public Criteria andLbNotIn(List<String> values) {
            addCriterion("LB not in", values, "lb");
            return (Criteria) this;
        }

        public Criteria andLbBetween(String value1, String value2) {
            addCriterion("LB between", value1, value2, "lb");
            return (Criteria) this;
        }

        public Criteria andLbNotBetween(String value1, String value2) {
            addCriterion("LB not between", value1, value2, "lb");
            return (Criteria) this;
        }

        public Criteria andXqs2000IsNull() {
            addCriterion("XQS2000 is null");
            return (Criteria) this;
        }

        public Criteria andXqs2000IsNotNull() {
            addCriterion("XQS2000 is not null");
            return (Criteria) this;
        }

        public Criteria andXqs2000EqualTo(Integer value) {
            addCriterion("XQS2000 =", value, "xqs2000");
            return (Criteria) this;
        }

        public Criteria andXqs2000NotEqualTo(Integer value) {
            addCriterion("XQS2000 <>", value, "xqs2000");
            return (Criteria) this;
        }

        public Criteria andXqs2000GreaterThan(Integer value) {
            addCriterion("XQS2000 >", value, "xqs2000");
            return (Criteria) this;
        }

        public Criteria andXqs2000GreaterThanOrEqualTo(Integer value) {
            addCriterion("XQS2000 >=", value, "xqs2000");
            return (Criteria) this;
        }

        public Criteria andXqs2000LessThan(Integer value) {
            addCriterion("XQS2000 <", value, "xqs2000");
            return (Criteria) this;
        }

        public Criteria andXqs2000LessThanOrEqualTo(Integer value) {
            addCriterion("XQS2000 <=", value, "xqs2000");
            return (Criteria) this;
        }

        public Criteria andXqs2000In(List<Integer> values) {
            addCriterion("XQS2000 in", values, "xqs2000");
            return (Criteria) this;
        }

        public Criteria andXqs2000NotIn(List<Integer> values) {
            addCriterion("XQS2000 not in", values, "xqs2000");
            return (Criteria) this;
        }

        public Criteria andXqs2000Between(Integer value1, Integer value2) {
            addCriterion("XQS2000 between", value1, value2, "xqs2000");
            return (Criteria) this;
        }

        public Criteria andXqs2000NotBetween(Integer value1, Integer value2) {
            addCriterion("XQS2000 not between", value1, value2, "xqs2000");
            return (Criteria) this;
        }

        public Criteria andZb2000IsNull() {
            addCriterion("ZB2000 is null");
            return (Criteria) this;
        }

        public Criteria andZb2000IsNotNull() {
            addCriterion("ZB2000 is not null");
            return (Criteria) this;
        }

        public Criteria andZb2000EqualTo(Double value) {
            addCriterion("ZB2000 =", value, "zb2000");
            return (Criteria) this;
        }

        public Criteria andZb2000NotEqualTo(Double value) {
            addCriterion("ZB2000 <>", value, "zb2000");
            return (Criteria) this;
        }

        public Criteria andZb2000GreaterThan(Double value) {
            addCriterion("ZB2000 >", value, "zb2000");
            return (Criteria) this;
        }

        public Criteria andZb2000GreaterThanOrEqualTo(Double value) {
            addCriterion("ZB2000 >=", value, "zb2000");
            return (Criteria) this;
        }

        public Criteria andZb2000LessThan(Double value) {
            addCriterion("ZB2000 <", value, "zb2000");
            return (Criteria) this;
        }

        public Criteria andZb2000LessThanOrEqualTo(Double value) {
            addCriterion("ZB2000 <=", value, "zb2000");
            return (Criteria) this;
        }

        public Criteria andZb2000In(List<Double> values) {
            addCriterion("ZB2000 in", values, "zb2000");
            return (Criteria) this;
        }

        public Criteria andZb2000NotIn(List<Double> values) {
            addCriterion("ZB2000 not in", values, "zb2000");
            return (Criteria) this;
        }

        public Criteria andZb2000Between(Double value1, Double value2) {
            addCriterion("ZB2000 between", value1, value2, "zb2000");
            return (Criteria) this;
        }

        public Criteria andZb2000NotBetween(Double value1, Double value2) {
            addCriterion("ZB2000 not between", value1, value2, "zb2000");
            return (Criteria) this;
        }

        public Criteria andXqs2016IsNull() {
            addCriterion("XQS2016 is null");
            return (Criteria) this;
        }

        public Criteria andXqs2016IsNotNull() {
            addCriterion("XQS2016 is not null");
            return (Criteria) this;
        }

        public Criteria andXqs2016EqualTo(Integer value) {
            addCriterion("XQS2016 =", value, "xqs2016");
            return (Criteria) this;
        }

        public Criteria andXqs2016NotEqualTo(Integer value) {
            addCriterion("XQS2016 <>", value, "xqs2016");
            return (Criteria) this;
        }

        public Criteria andXqs2016GreaterThan(Integer value) {
            addCriterion("XQS2016 >", value, "xqs2016");
            return (Criteria) this;
        }

        public Criteria andXqs2016GreaterThanOrEqualTo(Integer value) {
            addCriterion("XQS2016 >=", value, "xqs2016");
            return (Criteria) this;
        }

        public Criteria andXqs2016LessThan(Integer value) {
            addCriterion("XQS2016 <", value, "xqs2016");
            return (Criteria) this;
        }

        public Criteria andXqs2016LessThanOrEqualTo(Integer value) {
            addCriterion("XQS2016 <=", value, "xqs2016");
            return (Criteria) this;
        }

        public Criteria andXqs2016In(List<Integer> values) {
            addCriterion("XQS2016 in", values, "xqs2016");
            return (Criteria) this;
        }

        public Criteria andXqs2016NotIn(List<Integer> values) {
            addCriterion("XQS2016 not in", values, "xqs2016");
            return (Criteria) this;
        }

        public Criteria andXqs2016Between(Integer value1, Integer value2) {
            addCriterion("XQS2016 between", value1, value2, "xqs2016");
            return (Criteria) this;
        }

        public Criteria andXqs2016NotBetween(Integer value1, Integer value2) {
            addCriterion("XQS2016 not between", value1, value2, "xqs2016");
            return (Criteria) this;
        }

        public Criteria andZb2016IsNull() {
            addCriterion("ZB2016 is null");
            return (Criteria) this;
        }

        public Criteria andZb2016IsNotNull() {
            addCriterion("ZB2016 is not null");
            return (Criteria) this;
        }

        public Criteria andZb2016EqualTo(Double value) {
            addCriterion("ZB2016 =", value, "zb2016");
            return (Criteria) this;
        }

        public Criteria andZb2016NotEqualTo(Double value) {
            addCriterion("ZB2016 <>", value, "zb2016");
            return (Criteria) this;
        }

        public Criteria andZb2016GreaterThan(Double value) {
            addCriterion("ZB2016 >", value, "zb2016");
            return (Criteria) this;
        }

        public Criteria andZb2016GreaterThanOrEqualTo(Double value) {
            addCriterion("ZB2016 >=", value, "zb2016");
            return (Criteria) this;
        }

        public Criteria andZb2016LessThan(Double value) {
            addCriterion("ZB2016 <", value, "zb2016");
            return (Criteria) this;
        }

        public Criteria andZb2016LessThanOrEqualTo(Double value) {
            addCriterion("ZB2016 <=", value, "zb2016");
            return (Criteria) this;
        }

        public Criteria andZb2016In(List<Double> values) {
            addCriterion("ZB2016 in", values, "zb2016");
            return (Criteria) this;
        }

        public Criteria andZb2016NotIn(List<Double> values) {
            addCriterion("ZB2016 not in", values, "zb2016");
            return (Criteria) this;
        }

        public Criteria andZb2016Between(Double value1, Double value2) {
            addCriterion("ZB2016 between", value1, value2, "zb2016");
            return (Criteria) this;
        }

        public Criteria andZb2016NotBetween(Double value1, Double value2) {
            addCriterion("ZB2016 not between", value1, value2, "zb2016");
            return (Criteria) this;
        }

        public Criteria andXqs2017IsNull() {
            addCriterion("XQS2017 is null");
            return (Criteria) this;
        }

        public Criteria andXqs2017IsNotNull() {
            addCriterion("XQS2017 is not null");
            return (Criteria) this;
        }

        public Criteria andXqs2017EqualTo(Integer value) {
            addCriterion("XQS2017 =", value, "xqs2017");
            return (Criteria) this;
        }

        public Criteria andXqs2017NotEqualTo(Integer value) {
            addCriterion("XQS2017 <>", value, "xqs2017");
            return (Criteria) this;
        }

        public Criteria andXqs2017GreaterThan(Integer value) {
            addCriterion("XQS2017 >", value, "xqs2017");
            return (Criteria) this;
        }

        public Criteria andXqs2017GreaterThanOrEqualTo(Integer value) {
            addCriterion("XQS2017 >=", value, "xqs2017");
            return (Criteria) this;
        }

        public Criteria andXqs2017LessThan(Integer value) {
            addCriterion("XQS2017 <", value, "xqs2017");
            return (Criteria) this;
        }

        public Criteria andXqs2017LessThanOrEqualTo(Integer value) {
            addCriterion("XQS2017 <=", value, "xqs2017");
            return (Criteria) this;
        }

        public Criteria andXqs2017In(List<Integer> values) {
            addCriterion("XQS2017 in", values, "xqs2017");
            return (Criteria) this;
        }

        public Criteria andXqs2017NotIn(List<Integer> values) {
            addCriterion("XQS2017 not in", values, "xqs2017");
            return (Criteria) this;
        }

        public Criteria andXqs2017Between(Integer value1, Integer value2) {
            addCriterion("XQS2017 between", value1, value2, "xqs2017");
            return (Criteria) this;
        }

        public Criteria andXqs2017NotBetween(Integer value1, Integer value2) {
            addCriterion("XQS2017 not between", value1, value2, "xqs2017");
            return (Criteria) this;
        }

        public Criteria andZb2017IsNull() {
            addCriterion("ZB2017 is null");
            return (Criteria) this;
        }

        public Criteria andZb2017IsNotNull() {
            addCriterion("ZB2017 is not null");
            return (Criteria) this;
        }

        public Criteria andZb2017EqualTo(Double value) {
            addCriterion("ZB2017 =", value, "zb2017");
            return (Criteria) this;
        }

        public Criteria andZb2017NotEqualTo(Double value) {
            addCriterion("ZB2017 <>", value, "zb2017");
            return (Criteria) this;
        }

        public Criteria andZb2017GreaterThan(Double value) {
            addCriterion("ZB2017 >", value, "zb2017");
            return (Criteria) this;
        }

        public Criteria andZb2017GreaterThanOrEqualTo(Double value) {
            addCriterion("ZB2017 >=", value, "zb2017");
            return (Criteria) this;
        }

        public Criteria andZb2017LessThan(Double value) {
            addCriterion("ZB2017 <", value, "zb2017");
            return (Criteria) this;
        }

        public Criteria andZb2017LessThanOrEqualTo(Double value) {
            addCriterion("ZB2017 <=", value, "zb2017");
            return (Criteria) this;
        }

        public Criteria andZb2017In(List<Double> values) {
            addCriterion("ZB2017 in", values, "zb2017");
            return (Criteria) this;
        }

        public Criteria andZb2017NotIn(List<Double> values) {
            addCriterion("ZB2017 not in", values, "zb2017");
            return (Criteria) this;
        }

        public Criteria andZb2017Between(Double value1, Double value2) {
            addCriterion("ZB2017 between", value1, value2, "zb2017");
            return (Criteria) this;
        }

        public Criteria andZb2017NotBetween(Double value1, Double value2) {
            addCriterion("ZB2017 not between", value1, value2, "zb2017");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_hjjczz_eixsb
     *
     * @mbggenerated do_not_delete_during_merge Wed Nov 04 15:15:47 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_hjjczz_eixsb
     *
     * @mbggenerated Wed Nov 04 15:15:47 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}